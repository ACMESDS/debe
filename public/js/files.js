module.exports = {
	keys: {
		Enabled: "booelan",
		Name: "varchar(128)",
		Client: "varchar(64)",
		_Ingest_Size: "int(11)",
		_Ingest_Image_Width: "int(11)",
		_Ingest_Image_Height: "int(11)",
		_Ingest_Steps: "float",
		_Ingest_States: "int(11)",
		_Ingest_Actors: "int(11)",
		_Ingest_Samples: "int(11)",
		_Ingest_Rejects: "int(11)",
		_Ingest_Tag: "mediumtext",
		_Ingest_sampleTime: "float",
		_Ingest_Script: "mediumtext",
		_Ingest_Time: "datetime",
		_Ingest_durationTime: "float",
		Area: "varchar(32)",
		Classif: "varchar(128)",
		Attach: "mediumtext",
		_Score_Readibility: "float",
		_Score_Stokes: "float",
		_Score_Coherence: "float",
		_Score_Imaging: "float",
		_Score_Readiness: "float",
		_Score_OS: "float",
		_Score_Effort: "float",
		_Score_NGA: "float",
		_Score_Relevance: "float",
		Usecase: "varchar(32)",
		Signoff_L0: "boolean",
		Signoff_L1: "boolean",
		Signoff_L2: "boolean",
		Signoff_L3: "boolean",
		Signoff_L4: "boolean",
		Signoff_L5: "boolean",
		Revs: "int(11)",
		_State_Added: "datetime",
		_State_Name: "varchar(32)",
		_State_Notes: "mediumtext",
		_State_graded: "boolean",
		_State_pruned: "boolean",
		_State_archived: "boolean",
		_State_expired: "boolean",
		_State_ingested: "boolean",
		PoP_Expires: "datetime",
		PoP_durationDays: "float",
		PoP_Start: "datetime",
		PoP_End: "datetime",
		PoP_advanceDays: "float"
	},
	
	_mods: {
	},
	
	docs: {
		Enabled: "Scanned by file watch-dogs when enabled.",
		Name: "Name of data file used by plugin pipes.",
		Client: "User who created this file when ingested or uploaded.",
		_Ingest_Size: "Size of bytes in uploaded file.",
		_Ingest_Image_Width: "Number of columns in uploaded file.",
		_Ingest_Image_Height: "Number of rows in uploaded file.",
		_Ingest_Steps: "Number of event samples of ingested file.",
		_Ingest_States: "Number of unique event.states values of ingested file.",
		_Ingest_Actors: "Number of unique event.index values of ingest file.",
		_Ingest_Samples: "Number of event samples that remain when ingested file is pruned.",
		_Ingest_Rejects: "Number of events rejected when ingested file is pruned.",
		_Ingest_Tag: "Extra information that can be tagged to the file.",
		_Ingest_sampleTime: "Derived sample time of ingested file.",
		_Ingest_Script: "Script to sample event records when file is ingested.",
		_Ingest_Time: "Last time file ingested.",
		_Ingest_durationTime: "Derived observation interval when file ingested.",
		Area: "Not sure who uses",
		Classif: "Content classification.",
		Attach: "Extra information - not sure who uses",
		_Score_Readibility: "readibility score of text file during nlp scan.",
		_Score_Stokes: "stokes topic score of text file during nlp scan.",
		_Score_Coherence: "coherence topic score of text file during nlp scan.",
		_Score_Imaging: "imaging topic score of text file during nlp scan.",
		_Score_Readiness: "system readiness topic score of text file during nlp scan.",
		_Score_OS: "os score of text file during nlp scan.",
		_Score_Effort: "level-of-effort score of text file during nlp scan.",
		_Score_NGA: "NGA reference score of text file during nlp scan.",
		_Score_Relevance: "mission relevance score of text file during nlp scan.",
		Usecase: "not sure",
		Signoff_L0: "enabled by moderator",
		Signoff_L1: "enabled by moderator",
		Signoff_L2: "enabled by moderator",
		Signoff_L3: "enabled by moderator",
		Signoff_L4: "enabled by moderator",
		Signoff_L5: "enabled by moderator",
		Revs: "Number of time file was reviewed, nlp-ed, ingested, etc",
		_State_Added: "File creation time.",
		_State_Name: "state name assigned by watch dog.",
		_State_Notes: "ingest, queueing, watching dog information.",
		_State_graded: "watch dog graded file.",
		_State_pruned: "watch dog pruned file.",
		_State_archived: "watch dog archived file.",
		_State_expired: "watch dog expired file.",
		_State_ingested: "watch dog ingested file.",
		PoP_Expires: "file expiration date for its period-of-performance/ingest.",
		PoP_durationDays: "number of days to read when ingested.",
		PoP_Start: "starting ingest date.",
		PoP_End: "ending ingest date.",
		PoP_advanceDays: "number of days to advance after an ingest"
	}
}
