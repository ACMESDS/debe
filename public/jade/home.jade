//- UNCLASSIFIED

extends site
append site_parms
	- view = "Min"
	- parms = {Min:"Min",search:"search",brief:"brief",capture:"capture",chat:"chat",news:"news","news print":"print"}
append site_body

	case query.options
		when "Min"
			//	#post(path="/brief_geonode.jade",dims=dims)
			p.
				$$
				\begin{align}
				\dot{x} & = \sigma(y-x) \\
				\dot{y} & = \rho x - y - xz \\
				\dot{z} & = -\beta z + xy
				\end{align}
				$$
			br
			p Impressive 'eh
			p.
				\[
				J_\alpha(x) = \sum\limits_{m=0}^\infty \frac{(-1)^m}{m! \, \Gamma(m + \alpha + 1)}{\left({\frac{x}{2}}\right)}^{2 m + \alpha}
				\]

		when "search"
			#grid.Search(
				path="/CATALOG.db",
				head="Search,Execute,Print,Refresh",
				page=100,
				search="Content",
				cols="Ref,Name,Link.h,Dated.d,Searched")

			//
				#pivot.Browse(
					path="/CATALOG.db",
					page=25,dims=dims,
					pivots="Ref",
					cols="Link.h,Dated.d,Searched,Content.h")
				#treemap.Tree(
					path="/CATALOG.db",
					dims=dims,
					links="Browser")

		when "capture"
			#grid.Files(path="/uploads.db",
				page=page,dims=dims,typical,top,
				cols="Ref,Link.h,Area,Name,Size,Tags.x,Tagger")

				:markdown
					Here is where you can manage uploaded snapshots and tags.

			#minielt.ELT(links="src.Files.Ref")

				:markdown
					You can paste a snapshot here; then tag, crop, brighten, invert,
					grayscale, mark and upload it.  Screen snapshots can be captured and tagged 
					in the Image editor, then saved.  Image tags can be revised in the Uploads grid.

		when "chat"
			#grid.Chat(
				path="/sockets.db",
				page=25,dims=dims,
				cols="User,Org,Location,At,Joined.d,Message.x")

		when "news"
			#grid.News(
				path="/news.db",
				page=10,
				menu="datasets",
				cols="New.c,To.t,Starts.d,Stay.n,Message.h,Category.o" )

		when "brief"
			#home_brief.Briefing(dims="1400,900")

		when "print"
			#grid.News(
				path="news.db",
				page=60,dims="800,4000",calc,
				cols="Message.h")

		when "immersion"
			#folder.Gaming(left)
				#post.Blast(path="/cubeland.view",dims=dims)
				#post.Bounce(path="/spherebounce.view",dims=dims)
				#post.Anagylph(path="/anaglyph.view",dims=dims)
				#post.Build(path="/voxelpaint.view",dims=dims)

		when "intake"
			#null.TRLs(path="/states.db?Class=TRL",sync,cols="State,Name,Special")

			#pivot.Find(
				path="/intake.db",
				page=50,dims=dims,track="#{type}",kiss,
				pivots="App,Name",
				menu="Search",
				cols="TRL,Track,General(Special,HWConfig,SWConfig,Parms),Data Collect Requirements(Reqts(C*),iName,iClassif,iSpec),Host Env Requirements(Reqts(H*),oName,oClassif,oSpec),Dissem Requirements(M*)")

			#grid.List(
				path="/intake.db",
				page=50,dims=dims,track="#{type}",
				sorts="App,Name,TRL",
				links="Name.Find.Name",
				cols="App,Name,TRL,Track,General(Special,HWConfig,SWConfig,Parms),Data Collect Requirements(Reqts(C*),iName,iClassif,iSpec),Host Env Requirements(Reqts(H*),oName,oClassif,oSpec),Dissem Requirements(M*)")

			#form.Edit(
				path="/intake.db",
				links="ID.List.ID",
				page=page,dims=dims,
				cols="App,Name,TRL,Track,General(Special,HWConfig,SWConfig,Parms),Data Collect Requirements(Reqts(C*),iName,iClassif,iSpec),Host Env Requirements(Reqts(H*),oName,oClassif,oSpec),Dissem Requirements(M*)")

//- UNCLASSIFIED
