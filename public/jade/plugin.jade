// UNCLASSIFIED
//-
	Render a skin when DEBE encounters dynamic view endpoints /DS.MODE where
		&mode = MODE
		&cols = [key.type, ...]
		&page = page size of DS grid
		&refresh = refresh time of associated job grid
		&width = post width
		&height = post height

extends base
append base_parms
	case query.mode
		when "brief"
		when "gridbrief"
		when "runbrief"
			- tech = "reveal"
		default
			- tech = "extjs"

extends site
append site_parms
	case query.mode
		when "site"
			- view = "Basic"
		when "view"
		when "pivot"
			- view = "Nada"
		when "plugin"
			- view = "Basic"
			- banner = ""
		when "run"
			- view = "Typical"
		when "brief"
			- view = "Nada"
		default
			- view = "Nada"

append site_body

	- mode = query.mode
	- ds = query.ds || "plugin"
	- dscols = query.cols || []
	- dspage = query.page || 20
	- dsquery = query.search || ""
	- dsrefresh = query.refresh || ""
	- dspath = `/${ds}.db?${dsquery}`
	- dstitle = ds + " view"
	- dsdims = query.dims
	- dims = dsdims.split(",")
	- height = dims.pop()
	- width = dims.pop()
	- tasks = projs ? get( projs , {Plugin:ds}, "Task,Hours,Complete,FAQ1,FAQ2") : []

	case mode
		when "plugin"
		when "run"
			#grid.Usecase(
				path=dspath,
				cols=dscols.join(),
				menu="Agents",
				wrap,
				dims=dsdims,
				hover="finished",
				page=dspage )

				:markdown
					This *#{ds}* plugin provides a coupled dataset-engine to execute its engine with the selected usecase.  Simply 
					select	a usecase, then click the execute/run button. 
					
					You may run any plugin from the url bar:

						GET /PLUGIN.exe?ID=CASE 	Run PLUGIN engine using PLUGIN dataset parameters for specified CASE 
						GET /PLUGIN.exe?Name=CASE 	Run PLUGIN engine using PLUGIN dataset parameters for specified CASE

					Plugins may also be placed in job workflows when they contain (reserved) parameters:

							(Save) json reserve for storing the results of this CASE
							(Job) json parameters to place CASE into QoS-Credit regulated queue.
							(Task) name of project associated with this CASE
							(Description) document CASE
							
					Use  [Save+](/#{ds}.add?Save=doc), [Job+](/#{ds}.add?Job=doc), [Task+](/#{ds}.add?Task=name), [Description+](/#{ds}.add?Description=doc) to add,
					and [Save-](/#{ds}.sub?Save), [Job-](/#{ds}.sub?Job), [Task-](/#{ds}.sub?Task), [Description-](/#{ds}.sub?Description) to remove
					these parameters from the *#{ds}* plugin.   
					
					Plugins are tied with #{title}'s data ingest process, so wWhen events are ingested, the CASE="ingest" 
					record is cloned with Job parameters adjusted to the ingested events.

					A plugin may also contain a (Description) parameter; this may contains bloggable markdown  tags

						[image | post | update | LABEL,W,H](url) 

					to document the test case and its results.  Toggle the blog button to edit / display the blog.

					The header color indicates the status of the *#{ds}* plugin: completed (green), policed (blue),
					funded construction (orange), unfunded (red).  The *#{ds}* plugin impacts the following tasks:
					
				table!= gridify(tasks)
	
			#form.Engine(
				path="/engines.db?Name=#{ds}",
				hover="pending",
				cols="Name,Engine,Enabled.c,Program(Code.x,Vars.x.Context)")

				:markdown
					[Engines](/api.view) contain js | python | matlab | opencv | ... code.  Click the execute button to test the 
					engine with its default context parameters.  See [DSP](https://www.npmjs.com/package/dsp) module,
					[LWIP](https://github.com/EyalAr/lwip) module,  [MATH](http://mathjs.org/) module,
					[CRYPTO](https://nodejs.org/docs/latest/api/) module, and [FLEX](https://github.com/ACMESDS/flex) 
					for information on the modules attached to a js-engine.  Simply import packages as needed for a py-engine.
					
			#grid.Jobs(
				path="/queues.db?Class=#{ds}",
				cols="Arrived.d,Departed.d,Client,Notes.x,QoS.n,Age.n,Funded.c,Finished.c,Priority.n,Work.n,State.n,Task.t,Signoffs(Flagged.c,Sign0.c,Sign1.c,Sign2.c,Sign3.c)",
				refresh=dsrefresh,
				wrap,
				head="Print,Refresh,Help",
				hover="policed",
				page=dspage )

				:markdown
					Jobs created by this plugin are show here.  If the originator Client exceeded their credits,
					the job notes will be marked "unfunded"; otherwise the job is marked "funded".  If you would like to fund this job with 
					your credits, simply click its "(un)funded" link.  To decide if this is a wise purchase, 
					click the "#{ds}" link to see the test case case being explored; additional project information,
					if available, is attached as "RTP", "PMR" etc links.  Earning credits to run jobs is easy: simply upload data
					using the Files | Uploads.

		when "pivot"
			- pcol = dscols.pop()
			#pivot(
				class=dstitle,
				path=dspath,
				pivots=pcol,
				cols=dscols.join(),
				page=dspage )

		when "brief"
		when "gridbrief"
			section
				h3.hd= dstitle

				if query.data
					div!= gridify( query.data )

				else				
					iframe(
						src="/#{ds}.view?dims=#{dsdims}",
						width=width,
						height=height )

		when "pivbrief"
			section
				h3.hd= dstitle
				iframe(
					src="/#{ds}.pivot?dims=#{dsdims}",
					width=width,
					height=height )

		when "runbrief"
			section
				h3.hd= dstitle				
				iframe(
					src="/#{ds}.run?dims=#{dsdims}",
					width=width,
					height=height )

		default
			#grid(
				class=dstitle,
				path=dspath,
				cols=dscols.join(),
				dims=dsdims,
				page=dspage )

// UNCLASSIFIED
