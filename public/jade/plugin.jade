// UNCLASSIFIED
extends base
append base_help
	:markdown
		Render a DEBE notebook where:

			mode = notebook type = brief | gridbrief | runbrief | pivbrief | run | notebook | view | pivot
			ds = "/DATASET" dataset source
			cols = dataset files/columns/keys = "key.type.label, ..."

append base_parms
	case query.mode
		when "brief"
		when "gridbrief"
		when "runbrief"
		when "pivbrief"
			- tech = "reveal"
		default
			- tech = "extjs"

extends site
append site_parms
	case query.mode
		when "note"
		when "notebook"
			- view = "Insert"
			- options = { "more+":"", "more++":"", less:"" }
		when "run"
			- view = "Tabbed"
			- options = { "more+":"", "more++":"", less:"" }
		when "view"
		default
			- view = "Simple"

append site_body
	- mode = query.mode || ""
	- uses = query.uses || "none"
	- ds = query.ds || "dsUndefined"
	- pivcol = "tbd"
	- dscols = query.cols || ""
	- dspage = query.page || 20
	- dsrefresh = query.refresh || ""
	- dstitle = ds + " view"
	- dsdims = dims.split(",")
	- tasks = projs ? get( projs , {Plugin:ds}, "Task,Hours,Complete,FAQ1,FAQ2") : []
	- more = parseInt(query.more) || 0
	- dsdb = `/${ds}.db`

	case mode
		when ""
			p= "no notebook specified"
		when "note"
		when "notebook"
		when "run"
			#grid.Usecases(wrap,path=dsdb,cols=dscols,menu="Agents",blogs="Description",dims=dsdims,hover="finished",page=dspage )

				:markdown
					Run your *#{ds}* notebook by selecting the desired usecase context and clicking *Execute*.  
					
					You may also !{uses} your notebook.

					Your notebook's usecase context may include the following [optional keys](/api.view) ( add / remove ):  
					> [+](/#{ds}.add?Export=false) [/-](/#{ds}.sub?Export) *Export* switch writes engine results into a file  
					> [+](/#{ds}.add?Ingest=false) [/-](/#{ds}.sub?Ingest) *Ingest* switch ingests engine results into the database  
					> [+](/#{ds}.add?Share=false) [/-](/#{ds}.sub?Share) *Share* switch returns engine results to the status area  
					> [+](/#{ds}.add?Pipe=doc) [/-](/#{ds}.sub?Pipe) *Pipe* json regulates chips and events to the engine  
					> [+](/#{ds}.add?Description=doc) [/-](/#{ds}.sub?Description) *Description* documents a usecase  
					> [+](/#{ds}.add?Config=doc) [/-](/#{ds}.sub?Config) *Config* js-script defines usecase context  
					> [+](/#{ds}.add?Entry=doc) [/-](/#{ds}.sub?Entry) *Entry* json primes context on entry using { KEY: "SELECT ....", ...}  
					> [+](/#{ds}.add?Exit=doc) [/-](/#{ds}.sub?Exit) *Exit* json saves context on exit using { KEY: "UPDATE ....", ...}  
					> *Save_STATE* aggregates events [ {at:"STATE", ...}, ... ]  
					> *Save_rem* collects remaining unaggregated events  
					> *Save_jpg* generates jpg from {at: "jpg": prime: "name", save: "name", index: [...], values: [...] } event  

					Context keys can also be [grouped](/skinguide.view).  E.g. g1_a, g1_b, g1_g2_x, g1_g2_y, _roX, _roY.
					
					Header colors reflect [notebook status](/projects.view): <font color="green">completed</font>, <font color="blue">policed</font>, <font color="orange">funded</font>, <font color="red">unfunded</font>.

			#form.Engine(
				path="/engines.db?Name=#{ds}",
				hover="pending",
				head="select,insert,update,|,delete,|,refresh,login",
				login="/login?pass=",
				cols="ID,Name,Type,Enabled.c,Program(Code.x,State.x.Context,Wrap.x)")

				:markdown
					This engine remains invisible until it has been formally transitioned.

			#grid.Jobs(
				path="/queues.db?Name=#{ds}",
				cols="Arrived.d,Departed.d,Client,Notes.x,QoS.n,Age.n,Funded.c,Finished.c,Priority.n,Work.n,State.n,Task.t,Signoffs(Flagged.c,Sign0.c,Sign1.c,Sign2.c,Sign3.c)",
				wrap,
				head="Print,Refresh,Execute,Help",
				hover="policed",
				page=dspage )

				:markdown
					Jobs created by this notebook are show here.  If the job originator exceeded their credits,
					the job is marked "unfunded"; otherwise the job is marked "funded".  If you would like to 
					fund an unfended job, simply click its "(un)funded" link.  To decide if this is a wise purchase, 
					click the "#{ds}" link to see the test case case being explored; additional project information,
					if available, is attached as "RTP", "PMR" etc links.  Earning job credits is easy: simply 
					upload your data using the Files | Uploads.

			#post.ToU(path="/#{ds}.tou",dims="1800,600",wrap)

			#grid.Bricks(
				path="/files.db", wrap,
				cols="Name,Path,Ingest,Classif,PoP_Expires,PoP_Start,PoP_End,PoP_durationDays,PoP_advanceDays" )

			if more>0
				#grid.ContextKeys(path="/keyedit.db?ds=#{ds}",cols="Key,Type,Samples.x,Dist,Parms.x",wrap, page=dspage)

			if more>1
				#post.Flow( path="/#{ds}_flow.view", dims="1800,600",wrap )

		when "pivot"
			#pivot( class=dstitle, path=dsdb, pivots=pivcol, cols=dscols, page=dspage )

		when "brief"
		when "gridbrief"
			section
				h3.hd= dstitle

				if query.data
					div!= gridify( query.data )

				else				
					iframe( src="/#{ds}.view?dims=#{dims}", width=dsdims[0], height=dsdims[1] )

		when "pivbrief"
			section
				h3.hd= dstitle
				iframe( src="/#{ds}.pivot?dims=#{dims}", width=dsdims[0], height=dsdims[1] )

		when "runbrief"
			section
				h3.hd= dstitle				
				iframe( src="/#{ds}.run?dims=#{dims}", width=dsdims[0], height=dsdims[1] )

		when "calc"
			#grid( class=dstitle, path=dsdb, calc=1, cols="W*10", page=dspage )

		when "view"
		default
			#grid( class=dstitle, path=dsdb, cols=dscols, page=dspage )

// UNCLASSIFIED
