//- UNCLASSIFIED
extends layout
append layout_help
	:markdown
		base level skinning with parameters:

			// technology
			tech = "nada"  // nada | extjs | jquery | dojo | reveal | voxel | scene | three | cesium | joint | d3 | flow | ...

			// exjs
			carousel = false
			charting = false
			codeEdit = true
			jsonEdit = true
			theme = "crisp"  // crisp | neptune | aria | gray | ...
			// jquery
			grid = "DataTable" // DataTable | w2UI | jqgrid | ... 
			image = "Darkroom" // Darkroom | Camen | Vide | Fabric | ...
			pivot = "Isotope"	// Isotope | elFinder | apy-X | ...
			themer = false
			password = false
			// reveal
			highlight = "zenburn"	
			more = {}
			// voxel
			game = "cubeland"	// cubeland | ... 
			// three
			effect = "" //  AnaglyphEffect | ... 
			// cesium
			source = path to cesium source file
			host = {use:"swagdev", geohub: "https://sigma0.ilabs.ic.gov:8083", me: "localhost:8083", win: "http://200.100.50.101:8083", aws: "http://172.31.76.130:8083",local:"http://localhost:8083",swaggpu:"http://swag-gpu-01.ec2.internal:8083", swagws:"http://swag-ws-02.ec2.internal:8083", swagdev: "http://localhost:8083"}
			width = 750
			height = 500
			// d3
			map = ""
			// doc
			opens = true
	block base_help

append layout_parms
	- banner = query.holdoff ? "" : banner	// site banner or "" to disable
	- math = false // switch to enable mathjax
	- highlight = "zenburn" // style for code block highlighting in markdown

	block base_parms
		// base skinning technology
		- tech = "nada"  // nada | extjs | jquery | dojo | reveal | voxel | scene | three | cesium | joint | d3 | flow | ...
		// exjs
		- carousel = false
		- charting = false
		- codeEdit = true
		- jsonEdit = true
		- theme = "crisp"  // crisp | neptune | aria | gray | ...
		// jquery
		- grid = "DataTable" // DataTable | w2UI | jqgrid | ... 
		- image = "Darkroom" // Darkroom | Camen | Vide | Fabric | ...
		- pivot = "Isotope"	// Isotope | elFinder | apy-X | ...
		- themer = false
		- password = false
		// reveal
		- highlight = "zenburn"	
		- more = {}
		// voxel
		- game = "cubeland"	// cubeland | ... 
		// three
		- effect = "" //  AnaglyphEffect | ... 
		// cesium
		- source = query.source
		- host = {use:"swagdev", geohub: "https://sigma0.ilabs.ic.gov:8083", me: "localhost:8083", win: "http://200.100.50.101:8083", aws: "http://172.31.76.130:8083",local:"http://localhost:8083",swaggpu:"http://swag-gpu-01.ec2.internal:8083", swagws:"http://swag-ws-02.ec2.internal:8083", swagdev: "http://localhost:8083"}
		- width = 750
		- height = 500
		// d3
		- map = ""
		// doc
		- opens = true

append layout_head
	- locale = query.locale || "en"  // en | fr | de | ...
	- theme = query.theme || "" // name of css theme
	- holdoff = query.holdoff  || "" // name of loading-holdoff button or loading-holdoff "skin,skin, ..." accordion list

	//- css for given tech
	case tech
		when "extjs"
			if theme == "Hydra"
				script.
					alert("Install Hydra themes at themes/hydra");
			else
				case "5.x"
					when "5.x"
						link(rel="stylesheet", type="text/css", href="/clients/extjs/build/packages/ext-theme-"+(theme||"crisp")+"/build/resources/ext-theme-"+(theme||"crisp")+"-all.css")
						link(rel="stylesheet", type="text/css", href="/clients/extjs/plugins/htmleditor/resources/css/ux-all.css")
					when "6.x"
						link(rel="stylesheet", type="text/css", href="/clients/extjs/build/classic/theme-"+(theme||"crisp")+"/resources/theme-"+(theme||"crisp")+"-all.css")

			style.
				body {
					visibility: hidden;
				}
				//-
					.x-filein::-webkit-file-upload-button {
						visibility: hidden;
					}
					.x-filein::before {
						content: "select...";
						display: inline-block;
						outline: none;
						white-space: nowrap;
						cursor: pointer;
						font-weight: 700;
						font-size: 10pt;
					}
					.x-filein:hover::before {
						border-color: black;
					}
					.x-filein:active::before {
						background: -webkit-linear-gradient(top, #e3e3e3, #f9f9f9);
					}

				.x-grid-row-summary {
					font-size: 0.7em;
					font-weight: bold;
				}
				.x-grid-cell-inner {
					white-space: wrap;
				}

				//-
					.x-menu-button {
						display: block;
						font-size: 1.1em;
						font-weight: bold;
						text-transform: uppercase;
						padding: 10px 15px;
						margin: 20px auto;
						color: #ccc;
						background-color: #555;
						background: -webkit-linear-gradient(#888, #555);
						background: linear-gradient(#888, #555);
						border: 0 none;
						border-radius: 3px;
						text-shadow: 0 -1px 0 #000;
						box-shadow: 0 1px 0 #666, 0 5px 0 #444, 0 6px 6px rgba(0,0,0,0.6);
						cursor: pointer;
						-webkit-transition: all 150ms ease;
						transition: all 150ms ease;
					}

				td.Cell-0 { color: black; }
				td.Cell-1 { color: red; }
				td.Cell-2 { color: blue; }
				td.Cell-3 { color: green; }
				td.Cell-4 { color: orange; }
				td.Cell-5 { color: blue; }
				td.Cell-6 { color: red; }

				.x-combo-col { width: 150; }

				.x-grid-hd-inner .x-grid-cell-inner {
					white-space: normal;
				}

				.policed  { background-color: blue; }
				.finished  { background-color: green; }
				.working  { background-color: orange; }
				.pending  { background-color: red; }
				.caution  { background-color: yellow; }

				.contentClassif {
					text-align: center;
					background-color: yellow;
				}

				img.Action-1 {
					width:16px;
					height:16px;
					background:url(#{icons}actions/actions.gif) -16px 0;
				}
				img.Action-0 {
					width:16px;
					height:16px;
					background:url(#{icons}actions/actions.gif) 0px 0;
				}

		when "three"
			style.
				body {
					background:#777;
					padding:0;
					margin:0;
					font-weight: bold;
					overflow:hidden;
				}

				#info {
					position: absolute;
					top: 0px;
					width: 100%;
					color: #ffffff;
					padding: 5px;
					font-family:Monospace;
					font-size:13px;
					text-align:center;
					z-index:1000;
				}

				a {
					color: #ffffff;
				}

				#oldie a { color:#da0 }

		when "reveal"
			link(rel='stylesheet',href='/clients/reveal/css/reveal.min.css')
			link(rel='stylesheet',href='/clients/reveal/css/theme/#{query.theme||"moon"}.css')
			//-link(rel='stylesheet',href='/clients/reveal/css/print.css',type='text/css',media='print')

			style.
				li { text-align:left;text-indent:50; position:relative;top:-100; }
				iframe { width:1000px; height:500px; }
				footer { position:relative; top:600; }
				table { border-spacing: 5px;border-collapse: separate;width:150%; }
				p { font-size:20px !important;color:white; }
				.lg, .hd { font-size:40px !important; }
				.sm { font-size:15px !important; }
				.in { text-indent:50px !important; }
				a { color:red; }
				.al, .hd { text-align:left !important; }
				.ar { text-align:right !important; }
				.ac { margin-left:auto !important;margin-right:auto !important; }
				img.ic { display:block;margin-left:auto;margin-right:auto; }
				img.ir { display:block;margin-left:auto; }
				img.xx { position:relative;top:-200; }
				td { vertical-align:middle !important;color:white; }
				td.gr { background-color:green;color:white; }
				td.rd { background-color:red;color:white; }
				td.bl { background-color:blue;color:white; }
				h4 { position:absolute;top:-350; }
				h3 { position:relative;top:-500; }
				h2 { position:relative;top:-100; }
				.rd { color:red; }
				.bl { color:blue; }
				.gr { color:green; }
				h1.hd, h2.hd, h3.hd, h4.hd { color:green; }
				iframe.rd { background-color: red; }
				.container {
					position: relative;
					width: 50%;
				}
				.image {
					display: block;
					width: 100%;
					height: 80%;
				}
				.overlay {
					position: absolute;
					bottom: 0;
					left: 0;
					right: 0;
					background-color: #008CBA;
					overflow: hidden;
					width: 100%;
					height: 0;
					transition: .5s ease;
				}
				.container:hover .overlay {
					height: 100%;
				}
				.text {
					white-space: nowrap; 
					color: white;
					font-size: 20px;
					position: absolute;
					overflow: hidden;
					top: 50%;
					left: 50%;
					transform: translate(-50%, -50%);
					-ms-transform: translate(-50%, -50%);
				}
				.middle {
					transition: .5s ease;
					opacity: 0;
					position: absolute;
					top: 50%;
					left: 50%;
					transform: translate(-50%, -50%);
					-ms-transform: translate(-50%, -50%)
				}
			header
				p.rd.ar.sm #{classif} || #{client} || 
					a(href="file:///164.187.33.7/public/totem/#{name}", title="Open contents folder") Edit
					|  ||
					a(href="/#{name}.archive", title="Archive contents folder") Archive
					each val,key in more
						a(href=val, title=help)= key
					|  || 
					a(href="/briefs.view?notebook=#{name}", title="Open in new window") Open
					|  || 
					a(href="/tutorial.view?print-pdf=1", title="Print this tutorial") Print
					|  || 
					a(href="#{Home}") Home
					|  || O/utline S/ynopsis F/ullscreen B/lank F1/quiz

				img.ir(src="/stash/header0.jpg",width="50%",height="5%")
			footer
				block reveal_help
				p.rd.al.sm #{classif}
			//
				footer
				img.ac(src="/stash/footer.jpg",width="90%",height="1%")
				p.rd.al #{classif}
					|  || 
					a(href="/skinguide.view") Skinning
					|  || 
					a(href="/api.view") API

		when "scene"
			link(rel="stylesheet",href="/clients/games/style.css")

		when "voxel"
			#container
				#crosshair
				#battery
				nav#tools.bar-tab
					ul.tab-inner
						li(class="tab-item active")
							.tab-label
								| grass
						li.tab-item
							.tab-label
								| dirt
						li.tab-item
							.tab-label
								| obsidian
						li.tab-item
							.tab-label
								| plank
						li.tab-item
							.tab-label
								| dude		

		when "jquery"
			link(href='/clients/jquery/ui/css/smoothness/jquery-ui.css',rel='stylesheet')
			//- link(href='/clients/jquery/css/default.css',rel='stylesheet')
			if password
				input#text(type="password")
				| Forceable in <span>less than one second</span>
				//- $("#text").pwdstr("$info");

			case pivot
				when "Isotope"
					style.
						* {
							-webkit-box-sizing: border-box;
							-moz-box-sizing: border-box;
							box-sizing: border-box;
						}

						body {
							font-family: sans-serif;
						}

						.button {
							display: inline-block;
							padding: 0.5em 1.0em;
							background: #EEE;
							border: none;
							border-radius: 7px;
							background-image: linear-gradient( to bottom, hsla(0, 0%, 0%, 0), hsla(0, 0%, 0%, 0.2) );
							color: #222;
							font-family: sans-serif;
							font-size: 16px;
							text-shadow: 0 1px white;
							cursor: pointer;
						}

						.button:hover {
							background-color: #8CF;
							text-shadow: 0 1px hsla(0, 0%, 100%, 0.5);
							color: #222;
						}

						.button:active,
							.button.is-checked {
							background-color: #28F;
						}

						.button.is-checked {
							color: white;
							text-shadow: 0 -1px hsla(0, 0%, 0%, 0.8);
						}

						.button:active {
							box-shadow: inset 0 1px 10px hsla(0, 0%, 0%, 0.8);
						}

						.button-group:after {
							content: '';
							display: block;
							clear: both;
						}

						.button-group .button {
							float: left;
							border-radius: 0;
							margin-left: 0;
							margin-right: 1px;
						}

						.button-group .button:first-child { border-radius: 0.5em 0 0 0.5em; }
						.button-group .button:last-child { border-radius: 0 0.5em 0.5em 0; }

						.isotope {
							border: 1px solid #333;
							max-width: 1200px;
						}

						.isotope:after {
							content: '';
							display: block;
							clear: both;
						}

						.element {
							position: relative;
							float: left;
							width: 100px;
							height: 100px;
							margin: 5px;
							padding: 10px;
							background: #888;
							color: #262524;
						}

						.element > * {
							margin: 0;
							padding: 0;
						}

						.element .name {
							position: absolute;
							left: 10px;
							top: 60px;
							text-transform: none;
							letter-spacing: 0;
							font-size: 12px;
							font-weight: normal;
						}

						.element .symbol {
							position: absolute;
							left: 10px;
							top: 0px;
							font-size: 42px;
							font-weight: bold;
							color: white;
						}

						.element .number {
							position: absolute;
							right: 8px;
							top: 5px;
						}

						.element .weight {
							position: absolute;
							left: 10px;
							top: 76px;
							font-size: 12px;
						}

						.element .age {
							position: absolute;
							left: 30px;
							top: 76px;
							font-size: 12px;
						}

						.element.width1 { width: 100px; }
						.element.height1 { height: 100px; }
						.element.width2 { width: 200px; }
						.element.height2 { height: 200px; }
						.element.width3 { width: 300px; }
						.element.height3 { height: 300px; }
						.element.width4 { width: 400px; }
						.element.height4 { height: 400px; }

						.element.alkali          { background: #F00; background: hsl(   0, 100%, 50%); }
						.element.alkaline-earth  { background: #F80; background: hsl(  36, 100%, 50%); }
						.element.lanthanoid      { background: #FF0; background: hsl(  72, 100%, 50%); }
						.element.actinoid        { background: #0F0; background: hsl( 108, 100%, 50%); }
						.element.transition      { background: #0F8; background: hsl( 144, 100%, 50%); }
						.element.post-transition { background: #0FF; background: hsl( 180, 100%, 50%); }
						.element.metalloid       { background: #08F; background: hsl( 216, 100%, 50%); }
						.element.diatomic        { background: #00F; background: hsl( 252, 100%, 50%); }
						.element.halogen         { background: #F0F; background: hsl( 288, 100%, 50%); }
						.element.noble-gas       { background: #F08; background: hsl( 324, 100%, 50%); }

						.table-like {
							list-style: none;
							margin: 0;
							padding: 0;
						}

						.table-like > li {
							width: 100%;
							clear: both;
							border-top: 1px solid;
						}

						.table-like > li:after {
							display: block;
							content: '';
							clear: both;
						}

						.table-like > li > * {
							float: left;
							padding: 4px 4px;
						}

						.table-like .name { width: 30%; }
						.table-like .symbol { width: 10%; }
						.table-like .weight { width: 15%; }
						.table-like .number { width: 10%; }
						.table-like .category { width: 20%; }

				when "elFinder"
					link(type="text/css",rel="stylesheet",media="screen",href="/clients/elfinder/css/elfinder.min.css")
					link(type="text/css",rel="stylesheet",media="screen",href="/clients/elfinder/css/theme.css")
					script.
						var elFinder = true;

				default
					link(type="text/css",rel="stylesheet",href="/clients/apy/#{idx}/menu.css")
					style.
						input.ui-icon-save {
							width:18px;
							height:18px;
							background:url(#{icons}actions/save.png);
						}
						input.ui-icon-tag {
							width:18px;
							height:18px;
							background:url(#{icons}actions/tag.png);
						}
						input.ui-icon-crop {
							width:18px;
							height:18px;
							background:url(#{icons}actions/crop.png);
						}
						input.ui-icon-process {
							width:18px;
							height:18px;
							background:url(#{icons}actions/process.png);
						}

			case grid
				when "w2UI"
					link(href='/clients/w2ui/dist/w2ui.min.css',rel='stylesheet')

				when "DataTable"
					style.
						@import "/clients/datatables/media/css/demo_page.css";
						@import "/clients/datatables/media/css/demo_table.css";

				when "jqgrid"
					link(type="text/css",rel="stylesheet",media="screen",href="/clients/jquery/jqgrid/css/ui.jqgrid.css")

		when "flow"
			link(rel="stylesheet",href="/clients/joint/joint.css")
			style.
				.actionTrigger {
					transition: opacity 0.5s;
					opacity: 0;
				}
				.actionTrigger:hover {
					transition: opacity 0.3s;
					opacity: 0.3;
				}
				input.ui-icon-run {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/run.png);
				}
				input.ui-icon-open {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/open.png);
				}
				input.ui-icon-save {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/save.png);
				}
				input.ui-icon-load {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/load.png);
				}
				input.ui-icon-clone {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/clone.png);
				}
				input.ui-icon-delete {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/delete.png);
				}
				input.ui-icon-select {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/select.png);
				}
				input.ui-icon-info {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/info.png);
				}
				input.ui-icon-reset {
					width:18px;
					height:18px;
					background:url(/clients/icons/actions/reset.png);
				}

				table.x {
					border: 1px solid black;
					//-table-layout: fixed;
					width: 200px;
				}
				th.x, td.x {
					border: 1px solid black;
					overflow: hidden;
					font-size: 12px;
					width: 50px;
					min-width: 50px;
					max-width: 50px;
					line-height: 0px;
				}

				#progressBar {
					width: 400px;
					height: 20px;
					border: 1px solid #111;
					background-color: #292929;
				}

				#progressBar div {
					height: 100%;
					color: #fff;
					text-align: right;
					line-height: 20px; /* same as #progressBar height if we want text middle aligned */
					width: 0;
					background-color: #0099ff;
				}

		when "d3"		
		when "d3v3"
		when "dojo"
		
	//- Load underlying tech
	case tech
		when "flow"
			case "1.x"
				when "1.x"
					script(src="/clients/lodash.js")
					script(src="/clients/backbone.js")
					script(src='/clients/jquery/js/jquery-3.1.1.js')
				when "0.x"
					script(src='/clients/jquery/js/jquery-1.11.0.min.js')
					//-script(src='/clients/jquery/js/jquery-1.9.1.min.js')
					//-script(src='/clients/jquery/plugins/misc/jquery.ui.tooltip.min.js')

			script(src='/clients/jquery/ui/jquery-ui-1.10.3.custom.min.js')
			//- any changes in these scripts require re-minification
			script(src="/clients/joint/joint.min.js")
			script(src="/clients/joint/joint.shapes.devs.js")
			script(src="/clients/joint/joint.shapes.fsa.min.js")
			script(src="/clients/joint/joint.shapes.pn.min.js")
			script(src="/clients/joint/joint.shapes.erd.min.js")

		when "d3v3"
			script(src="/uis/base.js")
			script(src="/clients/d3v3.min.js")

		when "d3"
			script(src="/uis/base.js")
			script(src="/clients/d3.min.js")
			
			//- legacy
				case map
				when "world"
					script(src="/clients/maps/topojson.min.js")
					script(src="/clients/maps/datamaps.world.min.js")

				when "usa"
					script(src="/clients/maps/topojson.min.js")
					script(src="/clients/maps/datamaps.usa.min.js")

		when "voxel"
			script(src="/uis/base.js")
			script(src="/clients/games/#{game}/bundle.js")

		when "three"
			script(src="/uis/base.js")
			script(src="/clients/threejs/build/three.min.js")
			script(src="/clients/threejs/examples/js/Detector.js")
			script(src="/clients/threejs/examples/js/libs/stats.min.js")

		when "reveal"
			script(src="/uis/base.js")
			script(src='/clients/reveal/plugin/highlight/highlight.js')
			script(src='/clients/reveal/lib/js/head.min.js')
			script(src='/clients/reveal/js/reveal.min.js')

		when "scene"
			script(src="/uis/base.js")
			script(src="/clients/scenejs/scenejs.js")
			script.
				SceneJS.setConfigs({
					pluginPath:"/clients/scenejs/plugins"
				});

		when "dojo"
			script.
				var dojoConfig = {
					async: true,
					baseUrl: "/clients/dojo/",
					packages: [
						//{ name: "dojo" 	},
						//{ name: "dijit"  },
						//{ name: "dojox"  }
					]
				};

			script(src="/clients/dojo/dojo/dojo.js")

		when "jquery"
			script(src='/clients/jquery/js/jquery-1.11.0.min.js')

			if themer
				script(src='/clients/jquery/plugins/misc/themeswitchertool.js')

			case grid
				when "w2UI"
					script(src='/clients/w2ui/dist/w2ui.min.js')

				when "DataTable"
					script(src="/clients/datatables/media/js/jquery.dataTables.js")

				when "jqgrid"
					script(src="/clients/jqgrid/js/i18n/grid.locale-en.js")
					script(src="/clients/jqgrid/js/minified/jquery.jqgrid.min.js")

			script.
				var 
					fabric = null,
					Darkroom = null,
					elFinder = null,
					Caman = null;

			case image
				when "Vide"
					script(src="/clients/vide/src/jquery.vide.js")

				when "Fabric"
					script(src="/clients/fabric.js/dist/fabric.min.js")

				when "Caman"
					script(src="/clients/caman/dist/caman.full.min.js")

				when "Darkroom"
					//- "npm start" from jquery/plugins/darkroom to recompile lib/icons and lib/js
					link(href="/clients/darkroom/build/darkroom.css",rel='stylesheet')
					script(src="/clients/fabricjs/dist/fabric.min.js")
					script(src="/clients/darkroom/build/darkroom.js")
					script(src="/clients/darkroom/lib/js/plugins/darkroom.brightness.js")
					script(src="/clients/darkroom/lib/js/plugins/darkroom.grayscale.js")
					script(src="/clients/darkroom/lib/js/plugins/darkroom.invert.js")
					script(src="/clients/darkroom/lib/js/plugins/darkroom.remove.js")
					script(src="/clients/darkroom/lib/js/plugins/darkroom_help.js")

			case pivot
				when "elFinder"
					script(src="/clients/elfinder/js/elfinder.full.js")
					script.
						$("").elFinder = true;

					//- uncomment to debug elFinder
						link(href='/clients/jquery/ui/css/smoothness/jquery-ui.css',rel='stylesheet')
						script(src='/clients/jquery/js/jquery-1.8.0.min.js')
						script(src='/clients/jquery/ui/jquery-ui-1.8.23.custom.min.js')

				when "Isotope"
					script(src="/clients/isotope.pkgd.min.js")
					script(src="/clients/imagesloaded.pkgd.min.js")
					script(src="/clients/packery-mode.pkgd.min.js")

				default
					// nothing
						script(src="/clients/apy/#{idx}/jquery.js")
						script(src="/clients/apy/#{idx}/menu.js")
						a(href="http://-apycom.com/")

			script(src='/clients/jquery/ui/jquery-ui-1.10.3.custom.min.js')

		when "extjs"
			if carousel  /* unsupported in ExtJS 5.x */
				link( rel="stylesheet", type="text/css", href="/clients/extjs/resources/css/carousel.css" )
				//- script(src="/clients/extjs/ext-core.js")
				script(src="/clients/extjs/plugins/carousel.js")
				script.
					Ext.onReady( function () {
						new Ext.ux.carousel('content', {
							itemSelector: 'img',
							interval: 4,
							autoPlay: true,
							showPlayButton: true,
							transitionDuration: 2,
							width: 600,
							height: 400,
							pauseOnNavigate: true,
							freezeOnHover: false,
							transitionType: 'fade',
							navigationOnHover: true
						});
					});
			else
				script(src="/clients/extjs/build/ext-all.js")
				// script(src="/clients/ckeditor/ckeditor.js")

			if jsonEdit
				link(rel="stylesheet" href="/clients/flexied/jsoneditor.css")
				script(src="/clients/flexied/jquery.min.js")
				script(src="/clients/flexied/jquery.jsoneditor.js")
	
			if codeEdit
				link(rel="stylesheet", href="/clients/codemirror/lib/codemirror.css")
				link(rel="stylesheet", href="/clients/codemirror/addon/fold/foldgutter.css")
				// script(src="/clients/jquery/js/jquery-1.11.0.min.js")
				script(src="/clients/codemirror/lib/codemirror.js")
				script(src="/clients/codemirror/addon/fold/foldcode.js")
				script(src="/clients/codemirror/addon/fold/foldgutter.js")
				script(src="/clients/codemirror/addon/fold/brace-fold.js")
				script(src="/clients/codemirror/addon/fold/xml-fold.js")
				script(src="/clients/codemirror/addon/fold/indent-fold.js")
				script(src="/clients/codemirror/addon/fold/markdown-fold.js")
				script(src="/clients/codemirror/addon/fold/comment-fold.js")
				script(src="/clients/codemirror/mode/javascript/javascript.js")
				script(src="/clients/codemirror/mode/xml/xml.js")
				script(src="/clients/codemirror/mode/python/python.js")
				script(src="/clients/codemirror/mode/htmlmixed/htmlmixed.js")
				script(src="/clients/codemirror/mode/markdown/markdown.js")
				script(src="/clients/codemirror/mode/css/css.js")

			if charting
				link(type="text/css",href="/clients/extjs/build/packages/sencha-charts/build/neptune/resources/sencha-charts-all.css")
				script(src="/clients/extjs/build/packages/sencha-charts/build/sencha-charts.js")

			script.
				Ext.Loader.setConfig({
					enabled: true, 
					paths: {
						'Ext.ux': '/clients/extjs/plugins',
						'Ext': '/clients/extjs/build/examples'
				}});
				/*
				Ext.Loader.loadScript({
					//url: "/clients/extjs/packages/ext-locale/build/ext-locale-#{locale}.js",
					//onLoad: function () { alert("Language loaded"); },
					onError: function () { alert("Locale failed to load"); },
					scope: this
				});
				*/

	//- Insert common base tech
	script(src="/uis/base.js")
	script(src="/uis/#{tech}.js")

	block base_head

append layout_body

	if holdoff
		- holds = holdoff.split(",")

		if holds.length > 1
			#accordion.Load
				each hold in holds
					#post(class=hold,path="/"+hold+".view",refresh,dims="98%,98%")

		else
			#post(class=holdoff,path=url.replace('holdoff='+holdoff, ''),refresh,dims="98%,98%")

	else
		case tech
			when "nada"
				if opens
					a(href="/"+table+".view?"+search) open
					|  || 
					a(href="/edit.view?name="+table) edit
					|  || 
					a(href="/send.view?name="+table) send

				block base_body

			when "cesium"
				iframe(src="#{hosts[host]}/geonode/cesium.html?src=#{source}",width="#{width}",height="#{height}")
				block base_body

			when "three"
				if effect
					script(src="/clients/threejs/examples/js/effects/#{effect}.js")
				block base_body

			when "reveal"
				.reveal(style="width:100%;height:100%;")
					// .progress // .control // .state-background // .pause-overlay
					.slides
						block base_body

				script(src="/uis/quiz.js")
				script.
					Reveal.initialize({
						keyboard: {
							112: function () {  // F1 for quiz see jades/exquiz.jade for usage
								takequiz({ take:  true, slide: 0, doc: document, rev: Reveal, test: "#{name}.1.1" });
							}
						},

						// Display controls in the bottom right corner
						controls: true,

						// default slide delay
						autoSlide:10000, 	// milisecs
						
						// Display a presentation progress bar
						progress: true,

						// If true; each slide will be pushed to the browser history
						history: true,

						// Loops the presentation, defaults to false
						loop: false,

						// Slide numbers
						slideNumber: "c/t",

						// Flags if mouse wheel navigation should be enabled
						mouseWheel: true,

						// Apply a 3D roll to links on hover
						rollingLinks: true,

						// UI style
						theme:  Reveal.getQueryHash().theme, //'default', // available themes are in /css/theme

						// Transition style
						transition:  Reveal.getQueryHash().transition || 'default', //'default', // default/cube/page/concave/zoom/linear/none

						// For MathJax suuport

						math: {
							mathjax: '/clients/mathjax/MathJax.js',
							config: 'TeX-AMS_HTML-full'  // See http://docs.mathjax.org/en/latest/config-files.html
						},

						//	Optional libraries used to extend on reveal.js

						dependencies: [
							{ src: '/clients/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
							{ src: '/clients/reveal/plugin/math/math.js', async: true },
							{ src: '/clients/reveal/plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
							{ src: '/clients/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
							//{ src: '/clients/reveal/plugin/highlight/highlight.js', async: false, callback: function() { hljs.initHighlightingOnLoad(); } },
							{ src: '/clients/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
							{ src: '/clients/reveal/plugin/zoom-js/zoom.js', async: true, condition: function() { return true; } },
							{ src: '/clients/reveal/plugin/notes/notes.js', async: true, condition: function() { return true; } }
						]
					});

					// Fires when a slide with data-state=customevent is activated
					Reveal.addEventListener( 'customevent', function() {
						alert( '"custom event" has fired' );
					} );

					// Fires each time a new slide is activated
					Reveal.addEventListener( 'slidechanged', function( event ) {
						// event.indexh & event.indexv
					} );

					// Fires when frame is shown or hidden						
					Reveal.addEventListener( 'fragmentshown', function( event ) {
						// event.fragment = the fragment DOM element
					} );

					Reveal.addEventListener( 'fragmenthidden', function( event ) {
						// event.fragment = the fragment DOM element
					} );

			when "d3"
			when "flow"
			when "dojo"
			when "scene"
			when "voxel"
			default
				block base_body
