Ext.data.JsonP.DEBE({"tagname":"class","name":"DEBE","autodetected":{},"files":[{"filename":"debe.js","href":"debe.html#DEBE"},{"filename":"debe.md","href":"debe.md.html#DEBE"}],"requires":["child-process","child_process","cluster","engine","flex","fs","i18n-abide","jade","jade-filters","markdown","optomist","socket.io","socket.io-clusterhub","totem"],"members":[{"name":"SOAPsession","tagname":"method","owner":"DEBE","id":"method-SOAPsession","meta":{"private":true}},{"name":"merge","tagname":"method","owner":"DEBE","id":"method-merge","meta":{}},{"name":"render","tagname":"method","owner":"DEBE","id":"method-render","meta":{}},{"name":"treeify","tagname":"method","owner":"DEBE","id":"method-treeify","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-DEBE","extends":null,"singleton":null,"private":null,"mixins":[],"uses":[],"short_doc":"[]\n\nDEBE\n\nDEBE stacks the FLEX database extender, the\nCHIPPER earth-focused data segmenter and workflow manager ,\nand...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Requires</h4><div class='dependency'>child-process</div><div class='dependency'>child_process</div><div class='dependency'>cluster</div><div class='dependency'>engine</div><div class='dependency'>flex</div><div class='dependency'>fs</div><div class='dependency'>i18n-abide</div><div class='dependency'>jade</div><div class='dependency'>jade-filters</div><div class='dependency'>markdown</div><div class='dependency'>optomist</div><div class='dependency'>socket.io</div><div class='dependency'>socket.io-clusterhub</div><div class='dependency'>totem</div><h4>Files</h4><div class='dependency'><a href='source/debe.html#DEBE' target='_blank'>debe.js</a></div><div class='dependency'><a href='source/debe.md.html#DEBE' target='_blank'>debe.md</a></div></pre><div class='doc-contents'><p>[<img src=\"https://sourceforge.net\" alt=\"Forked from SourceForge\" />]</p>\n\n<h1>DEBE</h1>\n\n<p>DEBE stacks the <a href=\"https://github.com/acmesds/flex\">FLEX database extender</a>, the\n<a href=\"https://github.com/acmesds/chipper\">CHIPPER earth-focused data segmenter and workflow manager</a> ,\nand the <a href=\"https://github.com/acmesds/engine\">ENGINE language agnostic computer</a> above\nthe <a href=\"https://github.com/acmesds/totem\">TOTEM base web service</a> to provide a web service for\nmanaging interfaces, requirements, project metrics, geoint products and workflows.</p>\n\n<p>Simply require, configure and start DEBE:</p>\n\n<pre><code>var DEBE = require(\"debe\").config({\n    key: value,                         // set key\n    \"key.key\": value,                   // indexed set\n    \"key.key.\": value,                  // indexed append\n    OBJECT: [ function (){}, ... ],     // add OBJECT prototypes \n    Function: function () {}            // add chained initializer callback\n    :\n    :\n}, function (err) {\n    console.log( err ? \"something evil happended\" : \"Im running\");\n});\n</code></pre>\n\n<p>where its configuration keys follow <a href=\"https://github.com/acmesds/enum\">ENUM copy()</a> conventions and\nare described in its <a href=\"/shares/prm/debe/index.html\">PRM</a>.</p>\n\n<p>As documented in its <a href=\"/api.view\">api</a>, DEBE extends <a href=\"https://github.com/acmesds/totem\">TOTEM</a>'s\n/DATASET.TYPE?QUERY endpoints with TYPE convertors:</p>\n\n<pre><code>kml, flat, txt, tab, tree, delta, encap, nav\n</code></pre>\n\n<p>page skinners:</p>\n\n<pre><code>view, run, plugin, brief, pivot, site, pbrief, gbrief\n</code></pre>\n\n<p>a engine / workflow starter:</p>\n\n<pre><code>exe\n</code></pre>\n\n<p>and file attributes:</p>\n\n<pre><code>code, jade, classif, readability, client, size, risk\n</code></pre>\n\n<p>As documented in its <a href=\"/api.view\">api</a>, DEBE also extends  <a href=\"https://github.com/acmesds/totem\">TOTEM</a>'s<br/>\nQUERY flags with:</p>\n\n<pre><code>_save, _browse, _view, _blog, _json\n</code></pre>\n\n<p>DEBE provides its page skinners a context of useful parameters and methods, as described in\nits <a href=\"/skinguide.view\">skinguide</a>.</p>\n\n<h2>Installation</h2>\n\n<p>Download the latest version with</p>\n\n<pre><code>git clone https://github.com/acmesds/debe\n</code></pre>\n\n<p>Typically, you will want to redirect the following to your project:</p>\n\n<pre><code>ln -s PROJECT/totem/test.js test.js             # unit testing\nln -s PROJECT/totem/maint.sh maint.sh       # test startup and maint scripts\nln -s PROJECT/totem/certs certs                 # truststore folder for name.pfx certs \nln -s PROJECT/JPGS captcha                  # folder for captcha digits\n</code></pre>\n\n<h2>Databases</h2>\n\n<p>openv.apps  Reads on start() to derive command line parms\napp.X Table X read for job parameters in a .exe route</p>\n\n<h2>Examples</h2>\n\n<p>These examples are from DEBE's test.js unit tester.  You may also find Totem's <a href=\"https://github.com/acmesds/dsvar\">DSVAR</a>\nuseful, if you wish to learn more about its database agnosticator.</p>\n\n<h3>D1 - Encypted with a database</h3>\n\n<pre><code>var DEBE = require(\"../debe\").config({\n    name: ENV.SERVICE_NAME,\n    mysql: {\n        host: ENV.MYSQL_HOST,\n        user: ENV.MYSQL_USER,\n        pass: ENV.MYSQL_PASS\n    },\n    watch: {\n        \"./uploads\": function (file) {\n        }\n    }\n\n}, function (err) {\n    Trace( err || \"Yowzers - An encrypted DEBE service with a database watching files in uploads area\" );\n});\n</code></pre>\n\n<h3>D2 - D1 plus an endpoint</h3>\n\n<pre><code>var DEBE = require(\"../debe\").config({\n    mysql: {\n        host: ENV.MYSQL_HOST,\n        user: ENV.MYSQL_USER,\n        pass: ENV.MYSQL_PASS\n    },\n    \"worker.\": {\n        wfs: function (req,res) {\n            res(\"here i go again\");\n\n            TOTEM.fetchers.http(ENV.WFS_TEST, function (data) {\n                console.log(data);\n            });\n        }\n\n    }\n}, function (err) {\n    Trace( \"This bad boy in an encrypted service with a database and has an /wfs endpoint\" );\n});\n</code></pre>\n\n<h2>License</h2>\n\n<p><a href=\"LICENSE\">MIT</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-SOAPsession' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='DEBE'>DEBE</span><br/><a href='source/debe.html#DEBE-method-SOAPsession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/DEBE-method-SOAPsession' class='name expandable'>SOAPsession</a>( <span class='pre'>req, res, proxy</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Process an soapCRUD session peer-to-peer request. ...</div><div class='long'><p>Process an soapCRUD session peer-to-peer request.  Currently customized for Hydra-peer and\ncould/should be revised to support more generic peer-to-peer soapCRUD interfaces.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>req</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>HTTP request</p>\n</div></li><li><span class='pre'>res</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>HTTP response</p>\n</div></li><li><span class='pre'>proxy</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>Name of APP proxy function to handle this session.</p>\n</div></li></ul></div></div></div><div id='method-merge' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='DEBE'>DEBE</span><br/><a href='source/debe.html#DEBE-method-merge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/DEBE-method-merge' class='name expandable'>merge</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Merge changes when doing table deltas from their baseline versions. ...</div><div class='long'><p>Merge changes when doing table deltas from their baseline versions.</p>\n</div></div></div><div id='method-render' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='DEBE'>DEBE</span><br/><a href='source/debe.html#DEBE-method-render' target='_blank' class='view-source'>view source</a></div><a href='#!/api/DEBE-method-render' class='name expandable'>render</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Respond with res(html) thats renders this string. ...</div><div class='long'><p>Respond with res(html) thats renders this string.  If string is of he form .PATH then an\nattempt is made to render the file.  If an error occurs, the error is retured as html.</p>\n</div></div></div><div id='method-treeify' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='DEBE'>DEBE</span><br/><a href='source/debe.html#DEBE-method-treeify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/DEBE-method-treeify' class='name expandable'>treeify</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a tree = {name,weight,children: tree} from records having been sorted on keys=[key,...] ...</div><div class='long'><p>Return a tree = {name,weight,children: tree} from records having been sorted on keys=[key,...]</p>\n</div></div></div></div></div></div></div>","meta":{}});